{"version":3,"sources":["Pages/votonline.jpg","Pages/Login.js","Pages/Profile.js","Pages/Events.js","Pages/Results.js","Pages/PageNotFound.js","Pages/votingOption.js","Pages/ResultsView.js","App.js","index.js"],"names":["Login","history","useHistory","useState","username","setUsername","password","setPassword","loginStatus","setLoginStatus","Axios","defaults","withCredentials","className","src","votonline","alt","type","name","onChange","e","target","value","onClick","post","then","response","data","message","id","id_user","push","Profile","useParams","msg","setMsg","nameuser","setNameUser","mailAd","setEmailAd","passw","setPassW","doc_nr","setDoc_nr","doc_type","setDoc_Type","docData","setDocData","length","option","map","item","id_doc","descricao","mail","pass","docnr","doctype","group","userData","setUserData","useEffect","get","nome","email","nr_doc","tipo_doc","distrito","sessionStorage","setItem","Container","fluid","Row","getItem","Nav","defaultActiveKey","Link","href","Form","Group","placeholder","Label","Control","size","controlId","as","custom","required","Button","variant","user_id","affectedRows","Alert","Heading","Events","groupId","setGroupId","state","Date","toISOString","substring","eventList","setEventList","votelink","id_ele","listEvents","a","data_ini","b","data_fim","d_nome","bind","disabled","generalList","setGeneralList","listGeneralEvents","item2","Table","responsive","scope","Results","dateISO","rescheck","PageNotFound","VotingOption","userid","submitvote","idlista","anonimo","checked","idele","listid","anonim","goBack","lists","setLists","setChecked","votterlist","id_listas","nome_can","Col","ToggleButton","currentTarget","ResultsView","unvoted","setUnvoted","total","publicvoters","setPublicVoters","votes","setVotes","votesLists","countvotos","perc","listanome","Math","round","publicVoters","xs","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea05918b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/votonline.037b15fc.jpg\";","//react app (frontend)\r\nimport React, { useState } from 'react';\r\nimport { useHistory /*, useParams*/ } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport votonline from './votonline.jpg';\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [loginStatus, setLoginStatus] = useState('');\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  const login = () => {\r\n    // Axios.post('http://localhost:3001/login', {\r\n    Axios.post('https://atwvc.herokuapp.com/login', {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        setLoginStatus(response.data.message);\r\n      } else {\r\n        let id = response.data[0].id_user;\r\n        history.push(`/profile/${id}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Login</h1>\r\n      <img className=\"image\" src={votonline} alt=\"Votrónico\" />\r\n      <div className=\"form\">\r\n        <label>Utilizador</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <h5 className=\"alertmsg\">{loginStatus}</h5>\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <button className=\"submit\" onClick={login}>\r\n          Entrar\r\n        </button>\r\n        <div className=\"rodape\">\r\n          <p>Votrónico+ - Vitor Costa 2021</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Alert, Button, Form, Row} from \"react-bootstrap\";\r\n\r\nfunction Profile () {\r\n\r\n    let history = useHistory();\r\n    let id = useParams();\r\n    const [msg, setMsg] = useState();\r\n\r\n    const [nameuser, setNameUser] = useState(\"\");\r\n    const [mailAd, setEmailAd] = useState(\"\");\r\n    const [passw, setPassW] = useState(\"\");\r\n    const [doc_nr, setDoc_nr] = useState(\"\");\r\n    const [doc_type, setDoc_Type] = useState();\r\n\r\n    const [docData, setDocData] = useState([]);\r\n    if (docData.length === 0) {\r\n        if (docData !== null) {\r\n            Axios.post(\"http://localhost:3001/getDocs\").then((response) => {\r\n                setDocData(response.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    const option = {docData}.docData.map((item) => {\r\n        return (\r\n            <option key={item.id_doc} value={item.id_doc}>\r\n                {item.descricao}\r\n            </option>\r\n        );\r\n    });\r\n\r\n    const [userData, setUserData] = useState({\r\n        id: -1,\r\n        name: '',\r\n        mail: '',\r\n        pass: '',\r\n        docnr: '',\r\n        doctype: -1,\r\n        group: -1\r\n    });\r\n\r\n    useEffect(() => {\r\n        Axios.get( `http://localhost:3001/isLoggedIn/${id.id}`).then((response) => {\r\n            setUserData({\r\n                id: response.data[0].id_user,\r\n                name: response.data[0].nome,\r\n                mail: response.data[0].email,\r\n                pass: response.data[0].password,\r\n                docnr: response.data[0].nr_doc,\r\n                doctype: response.data[0].tipo_doc,\r\n                group: response.data[0].distrito,\r\n            });\r\n            sessionStorage.setItem(\"name\", response.data[0].nome);\r\n            setNameUser(response.data[0].nome);\r\n            setEmailAd(response.data[0].email);\r\n            setPassW(response.data[0].password);\r\n            setDoc_nr(response.data[0].nr_doc);\r\n            setDoc_Type(response.data[0].tipo_doc);\r\n        });\r\n    }, []);\r\n\r\n    const updateUserData = () => {\r\n        Axios.post(\"http://localhost:3001/update\",{\r\n            user_id: id.id,\r\n            nameuser: nameuser,\r\n            mailAd: mailAd,\r\n            passw: passw,\r\n            doc_nr: doc_nr,\r\n            doc_type: doc_type,\r\n        }).then((response) => {\r\n            if (response.data.affectedRows === 1) {\r\n                setMsg(<Alert variant=\"success\">\r\n                    <Alert.Heading>Dados alterados com sucesso!</Alert.Heading></Alert>);\r\n            } else {\r\n                setMsg(<Alert variant=\"danger\">\r\n                    <Alert.Heading>Falha na alteração!</Alert.Heading></Alert>);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"header\">\r\n                <h2>Menu</h2>\r\n                <h4>Bem vindo {sessionStorage.getItem(\"name\")}</h4>\r\n            </Row>\r\n            <Row className=\"mainCanvas\">\r\n                <Nav defaultActiveKey=\"/profile\" className=\"flex-column\">\r\n                    <Nav.Link >Home</Nav.Link>\r\n                    <Nav.Link href={`/events/${userData.id}`} >Evento/Votação</Nav.Link>\r\n                    <Nav.Link href={`/results/${userData.id}`}>Resultados</Nav.Link>\r\n                    <Nav.Link href=\"http://localhost:3001/logout\" >Logout</Nav.Link>\r\n                </Nav>\r\n                <div className=\"rest\">\r\n                    <header> <h1> Dados Pessoais </h1> </header>\r\n                    <hr/>\r\n                    {msg}\r\n                    <Form>\r\n                        <Form.Group type=\"text\" placeholder=\"Normal text\" >\r\n                            <Form.Label>Utilizador</Form.Label>\r\n                            <Form.Control size=\"sm\"\r\n                                          name=\"nameuser\"\r\n                                          onChange={(e)=> {\r\n                                              setNameUser(e.target.value);\r\n                                          }} placeholder={userData.name} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control size=\"sm\" type=\"password\" name=\"passw\"\r\n                                          onChange={(e)=> {\r\n                                              setPassW(e.target.value);\r\n                                          }} placeholder={\"*********\"} />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control size=\"sm\" type=\"email\" name=\"mailAd\"\r\n                                          onChange={(e)=> {\r\n                                              setEmailAd(e.target.value);\r\n                                          }} placeholder={userData.mail} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Tipo Documento</Form.Label>\r\n                            <Form.Control size=\"sm\" as=\"select\" name=\"doc_type\"\r\n                                          onChange={(e)=> {\r\n                                              setDoc_Type(e.target.value);\r\n                                          }} custom required>\r\n                                {option}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group type=\"text\" placeholder=\"Normal text\" >\r\n                            <Form.Label>Número de Documento</Form.Label>\r\n                            <Form.Control size=\"sm\" type=\"text\" name=\"doc_nr\"\r\n                                          onChange={(e)=> {\r\n                                              setDoc_nr(e.target.value);\r\n                                          }} placeholder={userData.docnr}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"button\" onClick={updateUserData}>\r\n                            Alterar\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </Row>\r\n            <Row className=\"rodape2\" >\r\n                <p>Votrónico+ | Vitor Costa 2021</p>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;","import Container from \"react-bootstrap/Container\";\r\nimport {Alert, Button, Form, Row} from \"react-bootstrap\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nfunction Events(){\r\n\r\n    let history = useHistory();\r\n    let id = useParams();\r\n    sessionStorage.setItem(\"id\",id.id);\r\n    const [groupId, setGroupId] = useState( 0);\r\n    const [msg, setMsg] = useState();\r\n    const state= new Date().toISOString().substring(0, 10);\r\n\r\n    useEffect( () => {\r\n        Axios.get(`http://localhost:3001/event/${id.id}`).then((response) => {\r\n            setGroupId(response.data[0].distrito);\r\n        });\r\n    }, []);\r\n\r\n    const [eventList, setEventList] = useState([]);\r\n    if (eventList.length===0) {\r\n        if (eventList!==null) {\r\n            Axios.get(`http://localhost:3001/events/${groupId}`).then((response) => {\r\n                setEventList(response.data);\r\n            });\r\n        }\r\n    }\r\n    const votelink = (id_ele) => {\r\n        Axios.get(`http://localhost:3001/voted/${id.id}/${id_ele}`).then(\r\n        (response) => {\r\n            if (response.data.length>0){\r\n                setMsg(<Alert variant=\"danger\">\r\n                    <Alert.Heading>Já submeteu o seu voto neste evento!</Alert.Heading></Alert>);\r\n            } else {\r\n                history.push(`/votingOption/${id_ele}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    const listEvents = {eventList}.eventList.map((item) => {\r\n        const a = (item.data_ini).substring(0, 10);\r\n        const b = (item.data_fim).substring(0, 10);\r\n        if (state<b && state>a) {\r\n            return (\r\n                <tr>\r\n                    <td>{item.id_ele}</td>\r\n                    <td>{item.nome}</td>\r\n                    <td>{a}</td>\r\n                    <td>{b}</td>\r\n                    <td>{item.d_nome}</td>\r\n                    <td>\r\n                        <Button onClick={votelink.bind(this, item.id_ele)}>Votar</Button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        } else {\r\n            if ( state<a) {\r\n                return (\r\n                    <tr>\r\n                        <td>{item.id_ele}</td>\r\n                        <td>{item.nome}</td>\r\n                        <td>{a}</td>\r\n                        <td>{b}</td>\r\n                        <td>{item.d_nome}</td>\r\n                        <td>\r\n                            <Button variant=\"danger\" disabled>Indisponível</Button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    const [generalList, setGeneralList] = useState([]);\r\n    if (groupId > 1) {\r\n        if (eventList.length === 0) {\r\n            if (eventList !== null) {\r\n                Axios.get(`http://localhost:3001/generalEvents`).then((response) => {\r\n                    setGeneralList(response.data);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const listGeneralEvents = {generalList}.generalList.map((item2) => {\r\n        const a = (item2.data_ini).substring(0, 10);\r\n        const b = (item2.data_fim).substring(0, 10);\r\n        if (state<b && state>a) {\r\n            return (\r\n                <tr>\r\n                    <td>{item2.id_ele}</td>\r\n                    <td>{item2.nome}</td>\r\n                    <td>{a}</td>\r\n                    <td>{b}</td>\r\n                    <td>{item2.d_nome}</td>\r\n                    <td>\r\n                        <Button onClick={votelink.bind(this, item2.id_ele)}>Votar</Button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }else {\r\n            if (state < a) {\r\n                return (\r\n                    <tr>\r\n                        <td>{item2.id_ele}</td>\r\n                        <td>{item2.nome}</td>\r\n                        <td>{a}</td>\r\n                        <td>{b}</td>\r\n                        <td>{item2.d_nome}</td>\r\n                        <td>\r\n                            <Button variant=\"danger\" disabled>Indisponível</Button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"header\">\r\n                <h2>Menu</h2>\r\n                <h4>Bem vindo {sessionStorage.getItem(\"name\")}</h4>\r\n            </Row>\r\n            <Row className=\"mainCanvas\">\r\n                <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                    <Nav.Link href={`../profile/${id.id}`}>Home</Nav.Link>\r\n                    <Nav.Link >Evento/Votação</Nav.Link>\r\n                    <Nav.Link href={`../results/${id.id}`}>Resultados</Nav.Link>\r\n                    <Nav.Link href=\"http://localhost:3001/logout\" >Logout</Nav.Link>\r\n                </Nav>\r\n                <div className=\"rest\">\r\n                    <header> <h1> Votações </h1> </header>\r\n                    {msg}\r\n                    <Table responsive>\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Designação do Evento</th>\r\n                            <th scope=\"col\">Data de Inicio</th>\r\n                            <th scope=\"col\">Data de Final</th>\r\n                            <th scope=\"col\">Agrupamento</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {listEvents}\r\n                        {listGeneralEvents}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </Row>\r\n            <Row className=\"rodape2\" >\r\n                <p>Votrónico+ | Vitor Costa 2021</p>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Events;","import {useHistory, useParams} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {Button, Row} from \"react-bootstrap\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Results(){\r\n\r\n    let history = useHistory();\r\n    let id = useParams();\r\n    sessionStorage.setItem(\"id\",id.id);\r\n    const [groupId, setGroupId] = useState( 0);\r\n    const dateISO = new Date().toISOString();\r\n\r\n    useEffect( () => {\r\n        Axios.get(`http://localhost:3001/event/${id.id}`).then((response) => {\r\n            setGroupId(response.data[0].distrito);\r\n        });\r\n    }, []);\r\n\r\n    const [eventList, setEventList] = useState([]);\r\n    if (eventList.length===0) {\r\n        if (eventList!==null) {\r\n            Axios.get(`http://localhost:3001/events/${groupId}`).then((response) => {\r\n                setEventList(response.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    const rescheck = (id_ele) => {\r\n        history.push(`/resultsCheck/${id_ele}`);\r\n    }\r\n\r\n    const listEvents = {eventList}.eventList.map((item) => {\r\n        if (dateISO>item.data_fim) {\r\n            return (\r\n                <tr>\r\n                    <td>{item.id_ele}</td>\r\n                    <td>{item.nome}</td>\r\n                    <td>Com resultados</td>\r\n                    <td>{item.d_nome}</td>\r\n                    <td>\r\n                        <Button variant=\"primary\" onClick={rescheck.bind(this, item.id_ele)}>Resultados</Button>\r\n                        <a> </a>\r\n                        <Button variant=\"dark\" disabled>Comprovativo</Button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n    });\r\n\r\n    const [generalList, setGeneralList] = useState([]);\r\n    if (groupId > 1) {\r\n        if (eventList.length === 0) {\r\n            if (eventList !== null) {\r\n                Axios.get(`http://localhost:3001/generalEvents`).then((response) => {\r\n                    setGeneralList(response.data);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const listGeneralEvents = {generalList}.generalList.map((item2) => {\r\n        if (dateISO>item2.data_fim) {\r\n            return (\r\n                <tr>\r\n                    <td>{item2.id_ele}</td>\r\n                    <td>{item2.nome}</td>\r\n                    <td>Com resultados</td>\r\n                    <td>{item2.d_nome}</td>\r\n                    <td>\r\n                        <Button variant=\"primary\" onClick={rescheck.bind(this, item2.id_ele)}>Resultados</Button>\r\n                        <a> </a>\r\n                        <Button variant=\"dark\" disabled>Comprovativo</Button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"header\">\r\n                <h2>Menu</h2>\r\n                <h4>Bem vindo {sessionStorage.getItem(\"name\")}</h4>\r\n            </Row>\r\n            <Row className=\"mainCanvas\">\r\n                <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                    <Nav.Link href={`../profile/${id.id}`}>Home</Nav.Link>\r\n                    <Nav.Link href={`../events/${id.id}`}>Evento/Votação</Nav.Link>\r\n                    <Nav.Link >Resultados</Nav.Link>\r\n                    <Nav.Link href=\"http://localhost:3001/logout\" >Logout</Nav.Link>\r\n                </Nav>\r\n                <div className=\"rest\">\r\n                    <header> <h1> Votações </h1> </header>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Designação do Evento</th>\r\n                                <th scope=\"col\">Estado</th>\r\n                                <th scope=\"col\">Agrupamento</th>\r\n                                <th scope=\"col\">Ações</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {listEvents}\r\n                            {listGeneralEvents}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </Row>\r\n            <Row className=\"rodape2\" >\r\n                <p>Votrónico+ | Vitor Costa 2021</p>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Results;","import React from \"react\";\r\n\r\nfunction PageNotFound () {\r\n    return (\r\n        <div>\r\n            <div className=\"notFound\">Oops! A página a que tentou aceder não existe!</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;","import {Alert, Button, Col, Form, Row, ToggleButton} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n\r\n\r\nfunction VotingOption() {\r\n\r\n    let history = useHistory();\r\n    let id = useParams();\r\n    const userid = sessionStorage.getItem(\"id\");\r\n    const [msg, setMsg] = useState();\r\n\r\n    const submitvote = (idlista) => {\r\n        let anonimo = 1;\r\n        if(checked){\r\n            anonimo = 0;\r\n        }\r\n        Axios.post(`http://localhost:3001/vote`, {\r\n            userid: userid,\r\n            idele: id.id,\r\n            listid: idlista,\r\n            anonim: anonimo,\r\n        }).then((response) => {\r\n            if (response.data.affectedRows === 1) {\r\n                setMsg(<Alert variant=\"success\">\r\n                    <Alert.Heading>Voto submetido com sucesso!</Alert.Heading></Alert>);\r\n                    history.goBack();\r\n            } else {\r\n                setMsg(<Alert variant=\"danger\">\r\n                    <Alert.Heading>Falha na votação!</Alert.Heading></Alert>);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [lists, setLists] = useState([]);\r\n    useEffect( () => {\r\n        Axios.get(`http://localhost:3001/getlists/${id.id}`).then((response) => {\r\n            setLists(response.data);\r\n        })\r\n    },[]);\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const votterlist = {lists}.lists.map((item) => {\r\n        return (\r\n            <tr value={item.id_listas}>\r\n                <td>{item.id_listas}</td>\r\n                <td>{item.descricao}</td>\r\n                <td>{item.nome_can}</td>\r\n                <td>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        className=\"button\"\r\n                        onClick={submitvote.bind(this,item.id_listas)}>\r\n                        Submeter voto\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"header\">\r\n                <h2>Voto</h2>\r\n                <h4>Bem vindo {sessionStorage.getItem(\"name\")}</h4>\r\n            </Row>\r\n            <header> <h1> Votação </h1> </header>\r\n            {msg}\r\n            <Row className=\"votos\">\r\n                <Form className=\"votos\">\r\n                    <Table responsive>\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\"> # </th>\r\n                            <th scope=\"col\"> Descrição </th>\r\n                            <th scope=\"col\"> Nome Candidato </th>\r\n                            <th scope=\"col\"> Voto </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {votterlist}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <ToggleButton\r\n                                className=\"mb-2\"\r\n                                id=\"toggle-check\"\r\n                                type=\"checkbox\"\r\n                                variant=\"outline-primary\"\r\n                                checked={checked}\r\n                                value=\"1\"\r\n                                onChange={(e) => setChecked(e.currentTarget.checked)}\r\n                            >\r\n                                Voto Público\r\n                            </ToggleButton>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"button\"\r\n                                onClick={history.goBack}>\r\n                                Voltar atrás\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Row>\r\n            <Row className=\"rodape2\" >\r\n                <p>Votrónico+ | Vitor Costa 2021</p>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default VotingOption;","import {Alert, Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n\r\n\r\nfunction ResultsView() {\r\n\r\n    let history = useHistory();\r\n    let id = useParams();\r\n\r\n    const [unvoted, setUnvoted] = useState(0);\r\n    useEffect( () => {\r\n        Axios.get(`http://localhost:3001/getnovotes/${id.id}`).then((response) => {\r\n            setUnvoted(response.data[0].total);\r\n        })\r\n    },[]);\r\n\r\n    const [publicvoters, setPublicVoters] = useState([]);\r\n    useEffect( () => {\r\n        Axios.get(`http://localhost:3001/getpublic/${id.id}`).then((response) => {\r\n            setPublicVoters(response.data);\r\n        })\r\n    },[]);\r\n\r\n    const [votes, setVotes] = useState([]);\r\n    useEffect( () => {\r\n        Axios.get(`http://localhost:3001/getvotes/${id.id}`).then((response) => {\r\n            setVotes(response.data);\r\n        })\r\n    },[]);\r\n\r\n    let total = unvoted;\r\n    const totalvotes = {votes}.votes.map((item) => {\r\n        total += item.countvotos;\r\n    })\r\n    const votesLists = {votes}.votes.map((item) => {\r\n        const perc = (item.countvotos/total)*100;\r\n        return (\r\n            <tr>\r\n                <td>{item.listanome}</td>\r\n                <td>{item.countvotos}</td>\r\n                <td>{Math.round(perc)+\"%\"}</td>\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    const publicVoters = {publicvoters}.publicvoters.map((item) => {\r\n        return (\r\n            <tr>\r\n                <td>{item.nome}</td>\r\n                <td>{item.descricao}</td>\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"header\">\r\n                <h2>Resultados</h2>\r\n                <h4>Bem vindo {sessionStorage.getItem(\"name\")}</h4>\r\n            </Row>\r\n            <header> <h1> Resultados </h1> </header>\r\n            <Button\r\n                variant=\"secondary\"\r\n                className=\"button\"\r\n                onClick={history.goBack}>\r\n                Voltar atrás\r\n            </Button>\r\n            <hr/>\r\n\r\n            <Row className=\"resultados\">\r\n                <Col xs={3}>\r\n                    <h3>Votos por Lista</h3>\r\n                    <Table responsive>\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Designação</th>\r\n                        <th scope=\"col\">Votos</th>\r\n                        <th scope=\"col\">Percentagem</th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {votesLists}\r\n                    <tr>\r\n                        <td>Abstenção</td>\r\n                        <td>{unvoted}</td>\r\n                        <td>{Math.round((unvoted/total)*100)+\"%\"}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                </Col>\r\n                <Col xs={3}>\r\n                    <tr>\r\n                        <th scope=\"col\">Gráfico</th>\r\n                    </tr>\r\n                </Col>\r\n                <Col xs={3}>\r\n                    <h3>Votos Públicos</h3>\r\n                    <Table responsive>\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Votante</th>\r\n                            <th scope=\"col\">Lista Votada</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {publicVoters}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row className=\"rodape2\" >\r\n                <p>Votrónico+ | Vitor Costa 2021</p>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ResultsView;","//react app (frontend)\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Pages/Login\";\nimport Profile from \"./Pages/Profile\";\nimport Events from \"./Pages/Events\";\nimport Results from \"./Pages/Results\";\nimport PageNotFound from \"./Pages/PageNotFound\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport VotingOption from \"./Pages/votingOption\";\nimport ResultsView from \"./Pages/ResultsView\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/profile/:id\" component={Profile} />\n                <Route exact path=\"/events/:id\" component={Events} />\n                <Route exact path=\"/results/:id\" component={Results} />\n                <Route exact path=\"/votingOption/:id\" component={VotingOption} />\n                <Route exact path=\"/resultscheck/:id\" component={ResultsView} />\n                <Route exact path=\"*\" component={PageNotFound} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}